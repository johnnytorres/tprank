%function ranking = calc_rankings(user_topics)  % load links data  links = load('links.txt');  nodes = unique(links);  num_nodes = length(nodes);  transition_matrix = zeros(num_nodes, num_nodes);  num_links = size(links,1);  for i=1:num_links    transition_matrix(links(i,2), links(i,1) )  =1;  end  nodes_weight = sum(transition_matrix);  nodes_weight = (nodes_weight ==0) + nodes_weight; %avoid NaN  for i=1:num_nodes    transition_matrix(:,i) = transition_matrix(:,i) / nodes_weight(i);  end  naive_rank = ones(num_nodes, 1);  naive_rank = naive_rank / num_nodes;  % calculate naive rank  for i=1:50    naive_rank = transition_matrix*naive_rank;  end  page_rank = ones(num_nodes, 1);  page_rank = page_rank / num_nodes;  % calculate page rank  e = ones(num_nodes,1) / num_nodes;  beta = 0.5;  for i=1:50    page_rank = beta * transition_matrix*page_rank + (1-beta)*e;  end  % calculate topic sensity page rank    num_topics = size(user_topics, 2);  topics_rank = ones(num_nodes,num_topics);  topics_rank = topics_rank / num_nodes;    for i=1:50    topics_rank = beta * transition_matrix*topics_rank + (1-beta)*user_topics;  end  %end