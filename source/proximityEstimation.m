function [d, dfh, meanlocations] = proximityEstimation(filename, numNodes)    latIndex = 3;    lngIndex = 4;    fprintf('loading tweets locations...\n');    locations = load(filename);    d = zeros(numNodes, numNodes);    dfh=zeros(size(locations,1),1);    fprintf('loading tweets locations...[ok]\n');    fprintf('calculating mean locations...');    meanlocations = zeros(numNodes, 3);        for i=1:numNodes        % calc closeness centrality for each user        uIndex = find(locations(:,1)==i);        ulocs = locations(uIndex, :);        numPoints = size(ulocs,1);                if numPoints ==0          continue;        end        ucc = zeros(numPoints,1);        for k=1:numPoints            udist=0;            for j=1:numPoints                if(i==j)                  continue;                end            udist = udist + calcGeodistance(ulocs(k,latIndex:lngIndex), ulocs(j,latIndex:lngIndex));            end            ucc(k) = udist / (numPoints-1);        end        [val,idx] = min(ucc);        homeLocation = ulocs(idx,latIndex:lngIndex);        meanlocations(i, :) = [i, homeLocation];        %fprintf('calculating mean location for user: %d\r', i);        printProgress(i, numNodes);                for k=1:numPoints            dfh(uIndex(1)-1+k,1) = calcGeodistance(ulocs(idx,latIndex:lngIndex), ulocs(k,latIndex:lngIndex));        end    end    fprintf('\ncalculating mean location...[ok]\n');    fprintf('calculating distances between users...');    for i=1:numNodes        %fprintf('calculating distances for user: %d \r', i);        printProgress(i, numNodes);        latlong1 = meanlocations(i, 2:3);        for j=1:numNodes            if i==j                continue;            end            latlong2 = meanlocations(j, 2:3);            d(j,i)=calcGeodistance(latlong1,latlong2);        end    end	fprintf('\ncalculating distances between users...[ok]\n');		end